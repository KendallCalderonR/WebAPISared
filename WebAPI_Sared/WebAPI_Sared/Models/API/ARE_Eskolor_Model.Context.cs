//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAPI_Sared.Models.API
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ARE_EskolorEntities : DbContext
    {
        public ARE_EskolorEntities()
            : base("name=ARE_EskolorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Canton> Canton { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<DireccionCliente> DireccionCliente { get; set; }
        public virtual DbSet<Distrito> Distrito { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<PermisosxPerfil> PermisosxPerfil { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<ProductosxPedido> ProductosxPedido { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<TelefonoCliente> TelefonoCliente { get; set; }
        public virtual DbSet<TipoDireccion> TipoDireccion { get; set; }
        public virtual DbSet<TipoTelefono> TipoTelefono { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Visita> Visita { get; set; }
    
        public virtual int crud_ClienteDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ClienteDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_ClienteInsert(Nullable<int> idRole, string nombre, string apellido, string cedula, string correo, string estado)
        {
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_ClienteInsert", idRoleParameter, nombreParameter, apellidoParameter, cedulaParameter, correoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_ClienteRead_Result> crud_ClienteRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ClienteRead_Result>("crud_ClienteRead");
        }
    
        public virtual ObjectResult<crud_ClienteReadID_Result> crud_ClienteReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ClienteReadID_Result>("crud_ClienteReadID", iDParameter);
        }
    
        public virtual int crud_ClienteUpdate(Nullable<int> iD, Nullable<int> idRole, string nombre, string apellido, string cedula, string correo, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idRoleParameter = idRole.HasValue ?
                new ObjectParameter("idRole", idRole) :
                new ObjectParameter("idRole", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ClienteUpdate", iDParameter, idRoleParameter, nombreParameter, apellidoParameter, cedulaParameter, correoParameter, estadoParameter);
        }
    
        public virtual int crud_DireccionClienteDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_DireccionClienteDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_DireccionClienteInsert(Nullable<int> idCliente, string direccion, Nullable<int> idProvincia, Nullable<int> idCanton, Nullable<int> idDistrito, Nullable<int> idTipoDireccion)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var idProvinciaParameter = idProvincia.HasValue ?
                new ObjectParameter("idProvincia", idProvincia) :
                new ObjectParameter("idProvincia", typeof(int));
    
            var idCantonParameter = idCanton.HasValue ?
                new ObjectParameter("idCanton", idCanton) :
                new ObjectParameter("idCanton", typeof(int));
    
            var idDistritoParameter = idDistrito.HasValue ?
                new ObjectParameter("idDistrito", idDistrito) :
                new ObjectParameter("idDistrito", typeof(int));
    
            var idTipoDireccionParameter = idTipoDireccion.HasValue ?
                new ObjectParameter("idTipoDireccion", idTipoDireccion) :
                new ObjectParameter("idTipoDireccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_DireccionClienteInsert", idClienteParameter, direccionParameter, idProvinciaParameter, idCantonParameter, idDistritoParameter, idTipoDireccionParameter);
        }
    
        public virtual ObjectResult<crud_DireccionClienteRead_Result> crud_DireccionClienteRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_DireccionClienteRead_Result>("crud_DireccionClienteRead");
        }
    
        public virtual ObjectResult<crud_DireccionClienteReadID_Result> crud_DireccionClienteReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_DireccionClienteReadID_Result>("crud_DireccionClienteReadID", iDParameter);
        }
    
        public virtual int crud_DireccionClienteUpdate(Nullable<int> iD, Nullable<int> idCliente, string direccion, Nullable<int> idProvincia, Nullable<int> idCanton, Nullable<int> idDistrito, Nullable<int> idTipoDireccion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var idProvinciaParameter = idProvincia.HasValue ?
                new ObjectParameter("idProvincia", idProvincia) :
                new ObjectParameter("idProvincia", typeof(int));
    
            var idCantonParameter = idCanton.HasValue ?
                new ObjectParameter("idCanton", idCanton) :
                new ObjectParameter("idCanton", typeof(int));
    
            var idDistritoParameter = idDistrito.HasValue ?
                new ObjectParameter("idDistrito", idDistrito) :
                new ObjectParameter("idDistrito", typeof(int));
    
            var idTipoDireccionParameter = idTipoDireccion.HasValue ?
                new ObjectParameter("idTipoDireccion", idTipoDireccion) :
                new ObjectParameter("idTipoDireccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_DireccionClienteUpdate", iDParameter, idClienteParameter, direccionParameter, idProvinciaParameter, idCantonParameter, idDistritoParameter, idTipoDireccionParameter);
        }
    
        public virtual int crud_MarcaDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_MarcaDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_MarcaInsert(string marca, string estado, string descripcion)
        {
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_MarcaInsert", marcaParameter, estadoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<crud_MarcaRead_Result> crud_MarcaRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_MarcaRead_Result>("crud_MarcaRead");
        }
    
        public virtual ObjectResult<crud_MarcaReadID_Result> crud_MarcaReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_MarcaReadID_Result>("crud_MarcaReadID", iDParameter);
        }
    
        public virtual int crud_MarcaUpdate(Nullable<int> iD, string marca, string estado, string descripcion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_MarcaUpdate", iDParameter, marcaParameter, estadoParameter, descripcionParameter);
        }
    
        public virtual int crud_PedidoDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PedidoDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_PedidoInsert(Nullable<int> idUsuario, Nullable<int> idCliente, Nullable<int> idEstado, Nullable<int> idPedido, string estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_PedidoInsert", idUsuarioParameter, idClienteParameter, idEstadoParameter, idPedidoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_PedidoRead_Result> crud_PedidoRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PedidoRead_Result>("crud_PedidoRead");
        }
    
        public virtual ObjectResult<crud_PedidoReadID_Result> crud_PedidoReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PedidoReadID_Result>("crud_PedidoReadID", iDParameter);
        }
    
        public virtual int crud_PedidoUpdate(Nullable<int> iD, Nullable<int> idUsuario, Nullable<int> idCliente, Nullable<int> idEstado, Nullable<int> idPedido, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PedidoUpdate", iDParameter, idUsuarioParameter, idClienteParameter, idEstadoParameter, idPedidoParameter, estadoParameter);
        }
    
        public virtual int crud_PerfilDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PerfilDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_PerfilInsert(string nombre, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_PerfilInsert", nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_PerfilRead_Result> crud_PerfilRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PerfilRead_Result>("crud_PerfilRead");
        }
    
        public virtual ObjectResult<crud_PerfilReadID_Result> crud_PerfilReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PerfilReadID_Result>("crud_PerfilReadID", iDParameter);
        }
    
        public virtual int crud_PerfilUpdate(Nullable<int> iD, string nombre, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PerfilUpdate", iDParameter, nombreParameter, estadoParameter);
        }
    
        public virtual int crud_PermisosDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PermisosDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_PermisosInsert(string permiso, string estado)
        {
            var permisoParameter = permiso != null ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_PermisosInsert", permisoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_PermisosRead_Result> crud_PermisosRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PermisosRead_Result>("crud_PermisosRead");
        }
    
        public virtual ObjectResult<crud_PermisosReadID_Result> crud_PermisosReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PermisosReadID_Result>("crud_PermisosReadID", iDParameter);
        }
    
        public virtual int crud_PermisosxPerfilDelete(Nullable<int> idPermiso, Nullable<int> idPerfil)
        {
            var idPermisoParameter = idPermiso.HasValue ?
                new ObjectParameter("idPermiso", idPermiso) :
                new ObjectParameter("idPermiso", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_PermisosxPerfilDelete", idPermisoParameter, idPerfilParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_PermisosxPerfilInsert(Nullable<int> idPermiso, Nullable<int> idPerfil)
        {
            var idPermisoParameter = idPermiso.HasValue ?
                new ObjectParameter("idPermiso", idPermiso) :
                new ObjectParameter("idPermiso", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_PermisosxPerfilInsert", idPermisoParameter, idPerfilParameter);
        }
    
        public virtual ObjectResult<crud_PermisosxPerfilRead_Result> crud_PermisosxPerfilRead(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PermisosxPerfilRead_Result>("crud_PermisosxPerfilRead", idPerfilParameter);
        }
    
        public virtual ObjectResult<crud_PermisosxPerfilReadID_Result> crud_PermisosxPerfilReadID(Nullable<int> idPermiso, Nullable<int> idPerfil)
        {
            var idPermisoParameter = idPermiso.HasValue ?
                new ObjectParameter("idPermiso", idPermiso) :
                new ObjectParameter("idPermiso", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_PermisosxPerfilReadID_Result>("crud_PermisosxPerfilReadID", idPermisoParameter, idPerfilParameter);
        }
    
        public virtual int crud_ProductoDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ProductoDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_ProductoInsert(string producto, string descripcion, Nullable<int> idMarca, string estado)
        {
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("idMarca", idMarca) :
                new ObjectParameter("idMarca", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_ProductoInsert", productoParameter, descripcionParameter, idMarcaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_ProductoRead_Result> crud_ProductoRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ProductoRead_Result>("crud_ProductoRead");
        }
    
        public virtual ObjectResult<crud_ProductoReadID_Result> crud_ProductoReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ProductoReadID_Result>("crud_ProductoReadID", iDParameter);
        }
    
        public virtual int crud_ProductosxPedidoDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ProductosxPedidoDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_ProductosxPedidoInsert(Nullable<int> idPedido, Nullable<int> idProducto, Nullable<double> cantidad, string estado)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(double));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_ProductosxPedidoInsert", idPedidoParameter, idProductoParameter, cantidadParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_ProductosxPedidoRead_Result> crud_ProductosxPedidoRead(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ProductosxPedidoRead_Result>("crud_ProductosxPedidoRead", idPedidoParameter);
        }
    
        public virtual ObjectResult<crud_ProductosxPedidoReadID_Result> crud_ProductosxPedidoReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_ProductosxPedidoReadID_Result>("crud_ProductosxPedidoReadID", iDParameter);
        }
    
        public virtual int crud_ProductosxPedidoUpdate(Nullable<int> iD, Nullable<int> idPedido, Nullable<int> idProducto, Nullable<double> cantidad, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(double));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ProductosxPedidoUpdate", iDParameter, idPedidoParameter, idProductoParameter, cantidadParameter, estadoParameter);
        }
    
        public virtual int crud_ProductoUpdate(Nullable<int> iD, string producto, string descripcion, Nullable<int> idMarca, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("idMarca", idMarca) :
                new ObjectParameter("idMarca", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_ProductoUpdate", iDParameter, productoParameter, descripcionParameter, idMarcaParameter, estadoParameter);
        }
    
        public virtual int crud_TelefonoClienteDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TelefonoClienteDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_TelefonoClienteInsert(Nullable<int> idCliente, Nullable<int> idTipoTelefono, string telefono)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idTipoTelefonoParameter = idTipoTelefono.HasValue ?
                new ObjectParameter("idTipoTelefono", idTipoTelefono) :
                new ObjectParameter("idTipoTelefono", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_TelefonoClienteInsert", idClienteParameter, idTipoTelefonoParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<crud_TelefonoClienteRead_Result> crud_TelefonoClienteRead(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TelefonoClienteRead_Result>("crud_TelefonoClienteRead", idClienteParameter);
        }
    
        public virtual ObjectResult<crud_TelefonoClienteReadID_Result> crud_TelefonoClienteReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TelefonoClienteReadID_Result>("crud_TelefonoClienteReadID", iDParameter);
        }
    
        public virtual int crud_TelefonoClienteUpdate(Nullable<int> iD, Nullable<int> idCliente, Nullable<int> idTipoTelefono, string telefono)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idTipoTelefonoParameter = idTipoTelefono.HasValue ?
                new ObjectParameter("idTipoTelefono", idTipoTelefono) :
                new ObjectParameter("idTipoTelefono", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TelefonoClienteUpdate", iDParameter, idClienteParameter, idTipoTelefonoParameter, telefonoParameter);
        }
    
        public virtual int crud_TipoDireccionDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TipoDireccionDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_TipoDireccionInsert(string tipoDireccion, string estado)
        {
            var tipoDireccionParameter = tipoDireccion != null ?
                new ObjectParameter("tipoDireccion", tipoDireccion) :
                new ObjectParameter("tipoDireccion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_TipoDireccionInsert", tipoDireccionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_TipoDireccionRead_Result> crud_TipoDireccionRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TipoDireccionRead_Result>("crud_TipoDireccionRead");
        }
    
        public virtual ObjectResult<crud_TipoDireccionReadID_Result> crud_TipoDireccionReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TipoDireccionReadID_Result>("crud_TipoDireccionReadID", iDParameter);
        }
    
        public virtual int crud_TipoDireccionUpdate(Nullable<int> iD, string tipoDireccion, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoDireccionParameter = tipoDireccion != null ?
                new ObjectParameter("tipoDireccion", tipoDireccion) :
                new ObjectParameter("tipoDireccion", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TipoDireccionUpdate", iDParameter, tipoDireccionParameter, estadoParameter);
        }
    
        public virtual int crud_TipoTelefonoDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TipoTelefonoDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_TipoTelefonoInsert(string tipoTelefono, string estado)
        {
            var tipoTelefonoParameter = tipoTelefono != null ?
                new ObjectParameter("tipoTelefono", tipoTelefono) :
                new ObjectParameter("tipoTelefono", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_TipoTelefonoInsert", tipoTelefonoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_TipoTelefonoRead_Result> crud_TipoTelefonoRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TipoTelefonoRead_Result>("crud_TipoTelefonoRead");
        }
    
        public virtual ObjectResult<crud_TipoTelefonoReadID_Result> crud_TipoTelefonoReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_TipoTelefonoReadID_Result>("crud_TipoTelefonoReadID", iDParameter);
        }
    
        public virtual int crud_TipoTelefonoUpdate(Nullable<int> iD, string tipoTelefono, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var tipoTelefonoParameter = tipoTelefono != null ?
                new ObjectParameter("tipoTelefono", tipoTelefono) :
                new ObjectParameter("tipoTelefono", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_TipoTelefonoUpdate", iDParameter, tipoTelefonoParameter, estadoParameter);
        }
    
        public virtual int crud_UsuarioDelete(Nullable<int> original_ID, Nullable<int> original_idPerfil, string original_usuario, string original_contraseña, string original_nombre, string original_apellido, string original_correoElectronico, string original_estado)
        {
            var original_IDParameter = original_ID.HasValue ?
                new ObjectParameter("Original_ID", original_ID) :
                new ObjectParameter("Original_ID", typeof(int));
    
            var original_idPerfilParameter = original_idPerfil.HasValue ?
                new ObjectParameter("Original_idPerfil", original_idPerfil) :
                new ObjectParameter("Original_idPerfil", typeof(int));
    
            var original_usuarioParameter = original_usuario != null ?
                new ObjectParameter("Original_usuario", original_usuario) :
                new ObjectParameter("Original_usuario", typeof(string));
    
            var original_contraseñaParameter = original_contraseña != null ?
                new ObjectParameter("Original_contraseña", original_contraseña) :
                new ObjectParameter("Original_contraseña", typeof(string));
    
            var original_nombreParameter = original_nombre != null ?
                new ObjectParameter("Original_nombre", original_nombre) :
                new ObjectParameter("Original_nombre", typeof(string));
    
            var original_apellidoParameter = original_apellido != null ?
                new ObjectParameter("Original_apellido", original_apellido) :
                new ObjectParameter("Original_apellido", typeof(string));
    
            var original_correoElectronicoParameter = original_correoElectronico != null ?
                new ObjectParameter("Original_correoElectronico", original_correoElectronico) :
                new ObjectParameter("Original_correoElectronico", typeof(string));
    
            var original_estadoParameter = original_estado != null ?
                new ObjectParameter("Original_estado", original_estado) :
                new ObjectParameter("Original_estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_UsuarioDelete", original_IDParameter, original_idPerfilParameter, original_usuarioParameter, original_contraseñaParameter, original_nombreParameter, original_apellidoParameter, original_correoElectronicoParameter, original_estadoParameter);
        }
    
        public virtual ObjectResult<crud_UsuarioInsert_Result> crud_UsuarioInsert(Nullable<int> idPerfil, string usuario, string contraseña, string nombre, string apellido, string correoElectronico, string estado)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("correoElectronico", correoElectronico) :
                new ObjectParameter("correoElectronico", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_UsuarioInsert_Result>("crud_UsuarioInsert", idPerfilParameter, usuarioParameter, contraseñaParameter, nombreParameter, apellidoParameter, correoElectronicoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_UsuarioRead_Result> crud_UsuarioRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_UsuarioRead_Result>("crud_UsuarioRead");
        }
    
        public virtual ObjectResult<crud_UsuarioUpdate_Result> crud_UsuarioUpdate(Nullable<int> idPerfil, string usuario, string contraseña, string nombre, string apellido, string correoElectronico, string estado, Nullable<int> original_ID, Nullable<int> original_idPerfil, string original_usuario, string original_contraseña, string original_nombre, string original_apellido, string original_correoElectronico, string original_estado, Nullable<int> iD)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("correoElectronico", correoElectronico) :
                new ObjectParameter("correoElectronico", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var original_IDParameter = original_ID.HasValue ?
                new ObjectParameter("Original_ID", original_ID) :
                new ObjectParameter("Original_ID", typeof(int));
    
            var original_idPerfilParameter = original_idPerfil.HasValue ?
                new ObjectParameter("Original_idPerfil", original_idPerfil) :
                new ObjectParameter("Original_idPerfil", typeof(int));
    
            var original_usuarioParameter = original_usuario != null ?
                new ObjectParameter("Original_usuario", original_usuario) :
                new ObjectParameter("Original_usuario", typeof(string));
    
            var original_contraseñaParameter = original_contraseña != null ?
                new ObjectParameter("Original_contraseña", original_contraseña) :
                new ObjectParameter("Original_contraseña", typeof(string));
    
            var original_nombreParameter = original_nombre != null ?
                new ObjectParameter("Original_nombre", original_nombre) :
                new ObjectParameter("Original_nombre", typeof(string));
    
            var original_apellidoParameter = original_apellido != null ?
                new ObjectParameter("Original_apellido", original_apellido) :
                new ObjectParameter("Original_apellido", typeof(string));
    
            var original_correoElectronicoParameter = original_correoElectronico != null ?
                new ObjectParameter("Original_correoElectronico", original_correoElectronico) :
                new ObjectParameter("Original_correoElectronico", typeof(string));
    
            var original_estadoParameter = original_estado != null ?
                new ObjectParameter("Original_estado", original_estado) :
                new ObjectParameter("Original_estado", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_UsuarioUpdate_Result>("crud_UsuarioUpdate", idPerfilParameter, usuarioParameter, contraseñaParameter, nombreParameter, apellidoParameter, correoElectronicoParameter, estadoParameter, original_IDParameter, original_idPerfilParameter, original_usuarioParameter, original_contraseñaParameter, original_nombreParameter, original_apellidoParameter, original_correoElectronicoParameter, original_estadoParameter, iDParameter);
        }
    
        public virtual int crud_VisitaDelete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_VisitaDelete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> crud_VisitaInsert(Nullable<int> idUsuario, Nullable<System.DateTime> fechaHoraInicio, Nullable<System.DateTime> fechaHoraFinal, string ubicacionGPS, Nullable<int> idCliente, string estado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var fechaHoraInicioParameter = fechaHoraInicio.HasValue ?
                new ObjectParameter("fechaHoraInicio", fechaHoraInicio) :
                new ObjectParameter("fechaHoraInicio", typeof(System.DateTime));
    
            var fechaHoraFinalParameter = fechaHoraFinal.HasValue ?
                new ObjectParameter("fechaHoraFinal", fechaHoraFinal) :
                new ObjectParameter("fechaHoraFinal", typeof(System.DateTime));
    
            var ubicacionGPSParameter = ubicacionGPS != null ?
                new ObjectParameter("ubicacionGPS", ubicacionGPS) :
                new ObjectParameter("ubicacionGPS", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("crud_VisitaInsert", idUsuarioParameter, fechaHoraInicioParameter, fechaHoraFinalParameter, ubicacionGPSParameter, idClienteParameter, estadoParameter);
        }
    
        public virtual ObjectResult<crud_VisitaRead_Result> crud_VisitaRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_VisitaRead_Result>("crud_VisitaRead");
        }
    
        public virtual ObjectResult<crud_VisitaReadID_Result> crud_VisitaReadID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_VisitaReadID_Result>("crud_VisitaReadID", iDParameter);
        }
    
        public virtual int crud_VisitaUpdate(Nullable<int> iD, Nullable<int> idUsuario, Nullable<System.DateTime> fechaHoraInicio, Nullable<System.DateTime> fechaHoraFinal, string ubicacionGPS, Nullable<int> idCliente, string estado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var fechaHoraInicioParameter = fechaHoraInicio.HasValue ?
                new ObjectParameter("fechaHoraInicio", fechaHoraInicio) :
                new ObjectParameter("fechaHoraInicio", typeof(System.DateTime));
    
            var fechaHoraFinalParameter = fechaHoraFinal.HasValue ?
                new ObjectParameter("fechaHoraFinal", fechaHoraFinal) :
                new ObjectParameter("fechaHoraFinal", typeof(System.DateTime));
    
            var ubicacionGPSParameter = ubicacionGPS != null ?
                new ObjectParameter("ubicacionGPS", ubicacionGPS) :
                new ObjectParameter("ubicacionGPS", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_VisitaUpdate", iDParameter, idUsuarioParameter, fechaHoraInicioParameter, fechaHoraFinalParameter, ubicacionGPSParameter, idClienteParameter, estadoParameter);
        }

        public System.Data.Entity.DbSet<WebAPI_Sared.Models.API.crud_UsuarioRead_Result> crud_UsuarioRead_Result { get; set; }
    }
}
